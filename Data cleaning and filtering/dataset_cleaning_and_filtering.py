# -*- coding: utf-8 -*-
"""dataset_cleaning_and_filtering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QZk33AleY2nqcURswsOtNKmfhAH-Krl5

# Import pandas
"""

import pandas as pd

print(pd.__version__)

"""# Read the original dataset csv file"""

dataset = pd.read_csv ('/content/drive/MyDrive/Colab Notebooks/final-project-dataset/dataset.csv')
dataset

dataset.shape

print(dataset.info())

"""# Get the selected columns based on the questionnaire

> The following presents the corresponding label as reference for each column questionnaire code:

*   **Q1**   - Country
*   **Q5**   - Level of study
*   **Q6**   - Main field of study
*   **Q7**   - Age
*   **Q8**   - Gender
*   **Q17**  - Amount of workload
*   **Q20a** - Difficulty on focusing rate
*   **Q20b** - Performance improved rate
*   **Q20c** - Performance worsen rate
*   **Q20d** - Adapted well to new setup rate
*   **Q20e** - Master the skills taught in class rate
*   **Q20f** - Can do most difficult classwork rate
*   **Q21c** - Access on computer rate
*   **Q21i** - Good internet connection rate
*   **Q22a** - Browsing online information rate
*   **Q22b** - Sharing digital content rate
*   **Q23a** - Communication with close family member rate
*   **Q23b** - Communication with more distant family member
*   **Q23c** - Communication with close friend
*   **Q23d** - Communication with someone I live with
*   **Q23e** - Communication with neighbors
*   **Q23f** - Communication with colleague from my course
*   **Q23g** - Communication with lecturer
*   **Q23h** - Communication with administrative staff
*   **Q23i** - Communication with voluntary organizations
*   **Q23j** - Communication with social networks
*   **Q24b** - Person there for you if you felt down or depressed
*   **Q25a** - Joyful emotion rate while attending class or studying
*   **Q25b** - Hopeful emotion rate while attending class or studying
*   **Q25c** - Proud emotion rate while attending class or studying
*   **Q25d** - Frustrated emotion rate while attending class or studying
*   **Q25e** - Angry emotion rate while attending class or studying
*   **Q25f** - Anxious emotion rate while attending class or studying
*   **Q25g** - Ashamed emotion rate while attending class or studying
*   **Q25h** - Relived emotion rate while attending class or studying
*   **Q25i** - Hopeless emotion rate while attending class or studying
*   **Q25j** - Bored emotion rate while attending class or studying
*   **Q26a** - Worrying about personal physical health rate
*   **Q26b** - Worrying about personal mental health rate
*   **Q26c** - Worrying about studying issues rate
*   **Q26d** - Worrying about future education rate
*   **Q26e** - Worrying about personal finances rate
*   **Q26f** - Worrying about family and relationship rate
*   **Q26g** - Worrying about professional career in future rate
*   **Q26h** - Worrying about similar pandemic crisis in future rate
*   **Q26i** - Worrying about leisure activities rate
"""

dt_selected_columns = dataset[['Q1','Q5','Q6','Q7','Q8','Q17','Q20a','Q20b','Q20c','Q20d',
                       'Q20e','Q20f','Q21c','Q21i','Q22a','Q22b','Q23a','Q23b','Q23c','Q23d',
                       'Q23e','Q23f','Q23g','Q23h','Q23i','Q23j','Q24b','Q25a','Q25b','Q25c',
                       'Q25d','Q25e','Q25f','Q25g','Q25h','Q25i','Q25j','Q26a','Q26b','Q26c',
                       'Q26d','Q26e','Q26f','Q26g','Q26h','Q26i']]
dt_selected_columns

dt_selected_columns.shape

"""# Get the sixteen selected countries through rows"""

dt_country_rows = dt_selected_columns.loc[dt_selected_columns['Q1'].isin(['Afghanistan','Bangladesh','China','Georgia','India',
                                                                                'Indonesia','Kuwait','Kyrgyzstan','Oman','Pakistan',
                                                                                'The Philippines','Saudi Arabia','Sri Lanka',
                                                                                'Thailand','Turkey','United Arab Emirates'])]
dt_country_rows

"""# Get the data that have selected '1' in Q5, which correponds to 'Bachelor's Degree' as their level of study"""

dt_undergraduate_degree = dt_country_rows.loc[dt_country_rows['Q5'] == 1]
dt_undergraduate_degree

"""# Get the first one hundred inputs each from the sixteen selected countries and satisfied the 'Bachelor's Degree' as the level of study"""

afghanistan_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'Afghanistan']
afghanistan_data

afghanistan_hundred = afghanistan_data.head(100)
afghanistan_hundred

bangladesh_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'Bangladesh']
bangladesh_data

bangladesh_hundred = bangladesh_data.head(100)
bangladesh_hundred

china_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'China']
china_data

china_hundred = china_data.head(100)
china_hundred

georgia_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'Georgia']
georgia_data

georgia_hundred = georgia_data.head(100)
georgia_hundred

india_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'India']
india_data

india_hundred = india_data.head(100)
india_hundred

indonesia_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'Indonesia']
indonesia_data

indonesia_hundred = indonesia_data.head(100)
indonesia_hundred

kuwait_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'Kuwait']
kuwait_hundred = kuwait_data.head(100)
kuwait_hundred

kyrgyzstan_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'Kyrgyzstan']
kyrgyzstan_data

kyrgyzstan_hundred = kyrgyzstan_data.head(100)
kyrgyzstan_hundred

oman_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'Oman']
oman_data

oman_hundred = oman_data.head(100)
oman_hundred

pakistan_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'Pakistan']
pakistan_data

pakistan_hundred = pakistan_data.head(100)
pakistan_hundred

philippines_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'The Philippines']
philippines_data

philippines_hundred = philippines_data.head(100)
philippines_hundred

saudi_arabia_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'Saudi Arabia']
saudi_arabia_data

saudi_arabia_hundred = saudi_arabia_data.head(100)
saudi_arabia_hundred

sri_lanka_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'Sri Lanka']
sri_lanka_data

sri_lanka_hundred = sri_lanka_data.head(100)
sri_lanka_hundred

thailand_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'Thailand']
thailand_data

thailand_hundred = thailand_data.head(100)
thailand_hundred

turkey_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'Turkey']
turkey_data

turkey_hundred = turkey_data.head(100)
turkey_hundred

uae_data = dt_undergraduate_degree.loc[dt_undergraduate_degree['Q1'] == 'United Arab Emirates']
uae_data

uae_hundred = uae_data.head(100)
uae_hundred

"""# Combine the generated one hundred inputs each from the sixteen selected countries"""

semi_final_dataset = afghanistan_hundred.append([bangladesh_hundred, china_hundred, georgia_hundred,india_hundred, 
                                                 indonesia_hundred, kuwait_hundred, kyrgyzstan_hundred, oman_hundred, 
                                                 pakistan_hundred, philippines_hundred, saudi_arabia_hundred, 
                                                 sri_lanka_hundred, thailand_hundred, turkey_hundred,uae_hundred],
                                                ignore_index = True)
semi_final_dataset

"""# Save as separate csv file named as 'semi_final_dataset'"""

semi_final_dataset.to_csv('semi_final_dataset.csv', index=False)

"""# Read the semi_final_dataset csv file"""

semi_final_dts = pd.read_csv ('/content/drive/MyDrive/Colab Notebooks/final-project-dataset/semi_final_dataset.csv')
semi_final_dts

print(semi_final_dts.info())